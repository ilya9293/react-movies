{"version":3,"file":"static/js/Reviews.a6b86685.chunk.js","mappings":"wQAyCA,MAnCA,WACE,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEWC,EAAAA,EAAAA,IAAUJ,GAFrB,gBAEPK,EAFO,EAEPA,QACRN,EAAWM,GAHI,iDAMfC,EAAAA,EAAAA,GAAO,wBANQ,yDAAH,qDAShBH,MACC,CAACH,KAEF,eAAIO,UAAU,aAAd,SACKT,EAAQU,OACTV,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC9B,OACE,gBAAaL,UAAU,mBAAvB,WACE,gBAAIA,UAAU,cAAd,qBAAqCG,MACrC,cAAGH,UAAU,aAAb,SAA2BI,MAFpBC,OAOb","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import notify from 'services/tostify';\n// import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiReview } from '../../services/api';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const { results } = await apiReview(movieId);\n        setReviews(results);\n      } catch (error) {\n        //   alert('Something went wrong');\n        notify('Something went wrong');\n      }\n    };\n    getReviews();\n  }, [movieId]);\n  return (\n    <ul className=\"listReview\">\n      {!!reviews.length ? (\n        reviews.map(({ author, content, id }) => {\n          return (\n            <li key={id} className=\"listReview__item\">\n              <h3 className=\"titleReview\">Author: {author}</h3>\n              <p className=\"textReview\">{content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <h3>No reviews</h3>\n      )}\n    </ul>\n  );\n}\n\n// Reviews.propTypes = {};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","apiReview","results","notify","className","length","map","author","content","id"],"sourceRoot":""}