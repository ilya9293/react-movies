{"version":3,"file":"static/js/Movies___page.ae30e72a.chunk.js","mappings":"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","sources":["components/ListMovies/ListMovies.jsx","pages/MoviesPage.jsx","services/api.js","services/tostify.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction ListMovies({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul className=\"listTrendMovies\">\n      {movies.map(({ name, title, id }) => {\n        return (\n          <li key={id} className=\"listTrendMovies__item\">\n            <Link\n              to={{\n                pathname: `/movies/${id}`,\n                state: {\n                  from: location,\n                },\n              }}\n              className=\"listTrendMovies__link\"\n            >\n              {name} {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nListMovies.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default ListMovies;\n","import ListMovies from 'components/ListMovies';\nimport notify from '../services/tostify';\nimport { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { apiSearch } from '../services/api';\n\nfunction MoviesPage() {\n  const [query, setQuery] = useState('');\n  const [movies, setmovies] = useState([]);\n  const [isClickSubmit, setIsClickSubmit] = useState(false);\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleInputChange = e => setQuery(e.target.value);\n\n  const handleSearchMovies = e => {\n    e.preventDefault();\n    if (!query.trim()) {\n      // alert('Enter your request');\n      notify('Enter your request');\n      return;\n    }\n    history.push({\n      ...location,\n      search: `query=${query.trim()}`,\n    });\n    setIsClickSubmit(true);\n  };\n\n  useEffect(() => {\n    if (!isClickSubmit) return;\n\n    const getSearchMovies = async () => {\n      try {\n        const { results } = await apiSearch(query);\n        if (!results.length) {\n          //  alert('Not Found. Please, change request');\n          notify('Not Found. Please, change request');\n          return;\n        }\n        setmovies(results);\n      } catch (error) {\n        //   alert('Something went wrong');\n        notify('Something went wrong');\n      } finally {\n        setIsClickSubmit(false);\n      }\n    };\n\n    getSearchMovies();\n  }, [isClickSubmit, query]);\n\n  const queryPath = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    if (!queryPath) return;\n    setQuery(queryPath);\n    setIsClickSubmit(true);\n  }, [queryPath]);\n\n  return (\n    <section className=\"sectionForm\">\n      <form className=\"formMovies\" onSubmit={handleSearchMovies}>\n        <input\n          onChange={handleInputChange}\n          value={query}\n          type=\"text\"\n          placeholder=\"type movie\"\n          className=\"formMovies__field\"\n        />\n        <button type=\"submit\" className=\"formMovies__btn\">\n          Search\n        </button>\n      </form>\n      {!!movies.length && <ListMovies movies={movies} />}\n    </section>\n  );\n}\n\nexport default MoviesPage;\n","const KEY = '88cb0f604f2d1a4c96f62a0a73ad3d75';\n\nconst apiTrends = async () => {\n  //   return  fetch(url).then(response => response.json());\n  const res = await fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`,\n  );\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n};\n\nconst apiSearch = async query => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n  );\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n};\n\nconst apiOneMovie = async id => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`,\n  );\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n};\n\nconst apiCast = async id => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`,\n  );\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n};\n\nconst apiReview = async id => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`,\n  );\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n};\n\nexport { apiTrends, apiSearch, apiOneMovie, apiCast, apiReview };\n","import { toast } from 'react-toastify';\n\nconst notify = request => toast.warn(request);\n\nexport default notify;\n"],"names":["movies","location","useLocation","className","map","name","title","id","to","pathname","state","from","useState","query","setQuery","setmovies","isClickSubmit","setIsClickSubmit","history","useHistory","useEffect","getSearchMovies","apiSearch","results","length","notify","queryPath","URLSearchParams","search","get","onSubmit","e","preventDefault","trim","push","onChange","target","value","type","placeholder","KEY","apiTrends","fetch","res","ok","json","Promise","reject","Error","statusText","apiOneMovie","apiCast","apiReview","request","toast"],"sourceRoot":""}